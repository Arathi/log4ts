(function(e,n){typeof exports=="object"&&typeof module<"u"?n(exports):typeof define=="function"&&define.amd?define(["exports"],n):(e=typeof globalThis<"u"?globalThis:e||self,n(e.log4ts={}))})(this,function(e){"use strict";var h=Object.defineProperty;var p=(e,n,o)=>n in e?h(e,n,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[n]=o;var a=(e,n,o)=>(p(e,typeof n!="symbol"?n+"":n,o),o);var n=(s=>(s.Debug="DEBUG",s.Info="INFO",s.Warning="WARN",s.Error="ERROR",s))(n||{});class o{constructor(t="ROOT"){a(this,"name");this.name=t}get time(){const t=new Date,i=`${t.getFullYear()}`.padStart(4,"0"),c=`${t.getMonth()}`.padStart(2,"0"),d=`${t.getDay()}`.padStart(2,"0"),u=`${t.getHours()}`.padStart(2,"0"),f=`${t.getMinutes()}`.padStart(2,"0"),l=`${t.getSeconds()}`.padStart(2,"0"),$=`${t.getMilliseconds()}`.padStart(3,"0");return`${i}-${c}-${d} ${u}:${f}:${l}.${$}`}getPrefix(t){return`${this.time} {${this.name}} [${t}] `}debug(...t){console.debug(this.getPrefix("DEBUG"),...t)}info(...t){console.info(this.getPrefix("INFO"),...t)}warn(...t){console.warn(this.getPrefix("WARN"),...t)}error(...t){console.error(this.getPrefix("ERROR"),...t)}}const r=class r{static getLogger(t){if(r.loggers.has(t))return r.loggers.get(t);const i=new o(t);return r.loggers.set(t,i),i}};a(r,"loggers",new Map);let g=r;e.LogLevel=n,e.Logger=o,e.LoggerFactory=g,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});
