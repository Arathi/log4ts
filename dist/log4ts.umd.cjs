(function(o,s){typeof exports=="object"&&typeof module<"u"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(o=typeof globalThis<"u"?globalThis:o||self,s(o.log4ts={}))})(this,function(o){"use strict";var P=Object.defineProperty;var R=(o,s,a)=>s in o?P(o,s,{enumerable:!0,configurable:!0,writable:!0,value:a}):o[s]=a;var g=(o,s,a)=>(R(o,typeof s!="symbol"?s+"":s,a),a);function s(t,n,e=" ",i){if(n==0)return t;const r=Math.abs(n);if(t.length==r)return t;let l=n>0?1:0;if(i!=null&&(l=i),t.length>r){const p=t.substring(0,n-6),h=t.substring(t.length-3);return`${p}...${h}`}if(l==0)return t.padStart(r,e);if(l==1)return t.padEnd(r,e);const c=r-t.length,d=t.length+Math.ceil(c/2);return t.padStart(d,e).padEnd(r,e)}function a(t="Y-M-D H:m:s.S",n=new Date){let e=t;const i=`${n.getFullYear()}`.padStart(4,"0"),r=`${n.getMonth()+1}`.padStart(2,"0"),l=`${n.getDay()}`.padStart(2,"0"),c=`${n.getHours()}`.padStart(2,"0"),d=`${n.getMinutes()}`.padStart(2,"0"),p=`${n.getSeconds()}`.padStart(2,"0"),h=`${n.getMilliseconds()}`.padStart(3,"0");return e=e.replace("Y",i),e=e.replace("M",r),e=e.replace("D",l),e=e.replace("H",c),e=e.replace("m",d),e=e.replace("s",p),e=e.replace("S",h),e}var E=(t=>(t[t.All=0]="All",t[t.Debug=1]="Debug",t[t.Info=2]="Info",t[t.Warning=3]="Warning",t[t.Error=4]="Error",t[t.Off=5]="Off",t))(E||{});const M=["ALL","DEBUG","INFO","WARN","ERROR","OFF"],N="ROOT",b="Y-M-D H:m:s.S",T="%D{Y-M-D H:m:s.S} {%N} [%-5L] ",O=0,m=/%D(\{(.*?)})?/,S=/%([+-]?\d+)?N/,A=/%([+-]?\d+)?L/,x={pattern:T,level:O};class D{constructor(n=N,e={}){g(this,"name");g(this,"options");this.name=n,this.options=Object.assign(x,e)}get level(){return this.options.level??0}getPrefix(n){let e=this.options.pattern??T,i=m.exec(e);if(i!=null){let r=i[2];r==null&&(r=b);const l=a(r);e=e.replace(m,l)}if(i=S.exec(e),i!=null){let r=i[1],l=0;r!=null&&(l=Number(r));const c=s(this.name,l);e=e.replace(S,c)}if(i=A.exec(e),i!=null){let r=i[1],l=0;r!=null&&(l=Number(r));let c=M[n];c=s(c,l),e=e.replace(A,c)}return e}debug(...n){this.level<=1&&console.debug(this.getPrefix(1),...n)}info(...n){this.level<=2&&console.info(this.getPrefix(2),...n)}warn(...n){this.level<=3&&console.warn(this.getPrefix(3),...n)}error(...n){this.level<=4&&console.error(this.getPrefix(4),...n)}}const f=class f{static getLogger(n){if(f.loggers.has(n))return f.loggers.get(n);const e=new D(n);return f.loggers.set(n,e),e}};g(f,"loggers",new Map);let u=f;o.LogLevel=E,o.Logger=D,o.LoggerFactory=u,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});
