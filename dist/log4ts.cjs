"use strict";var A=Object.defineProperty;var D=(n,e,t)=>e in n?A(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var l=(n,e,t)=>(D(n,typeof e!="symbol"?e+"":e,t),t);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});function p(n,e,t=" ",s){if(e==0)return n;const r=Math.abs(e);if(n.length==r)return n;let o=e>0?1:0;if(s!=null&&(o=s),n.length>r){const g=n.substring(0,e-6),f=n.substring(n.length-3);return`${g}...${f}`}if(o==0)return n.padStart(r,t);if(o==1)return n.padEnd(r,t);const i=r-n.length,c=n.length+Math.ceil(i/2);return n.padStart(c,t).padEnd(r,t)}function M(n="Y-M-D H:m:s.S",e=new Date){let t=n;const s=`${e.getFullYear()}`.padStart(4,"0"),r=`${e.getMonth()+1}`.padStart(2,"0"),o=`${e.getDay()}`.padStart(2,"0"),i=`${e.getHours()}`.padStart(2,"0"),c=`${e.getMinutes()}`.padStart(2,"0"),g=`${e.getSeconds()}`.padStart(2,"0"),f=`${e.getMilliseconds()}`.padStart(3,"0");return t=t.replace("Y",s),t=t.replace("M",r),t=t.replace("D",o),t=t.replace("H",i),t=t.replace("m",c),t=t.replace("s",g),t=t.replace("S",f),t}var S=(n=>(n[n.All=0]="All",n[n.Debug=1]="Debug",n[n.Info=2]="Info",n[n.Warning=3]="Warning",n[n.Error=4]="Error",n[n.Off=5]="Off",n))(S||{});const N=["ALL","DEBUG","INFO","WARN","ERROR","OFF"],O="ROOT",b="Y-M-D H:m:s.S",T="%D{Y-M-D H:m:s.S} {%N} [%-5L] ",x=0,h=/%D(\{(.*?)})?/,d=/%([+-]?\d+)?N/,E=/%([+-]?\d+)?L/,P={pattern:T,level:x};class m{constructor(e=O,t={}){l(this,"name");l(this,"options");this.name=e,this.options=Object.assign(P,t)}get level(){return this.options.level??0}getPrefix(e){let t=this.options.pattern??T,s=h.exec(t);if(s!=null){let r=s[2];r==null&&(r=b);const o=M(r);t=t.replace(h,o)}if(s=d.exec(t),s!=null){let r=s[1],o=0;r!=null&&(o=Number(r));const i=p(this.name,o);t=t.replace(d,i)}if(s=E.exec(t),s!=null){let r=s[1],o=0;r!=null&&(o=Number(r));let i=N[e];i=p(i,o),t=t.replace(E,i)}return t}debug(...e){this.level<=1&&console.debug(this.getPrefix(1),...e)}info(...e){this.level<=2&&console.info(this.getPrefix(2),...e)}warn(...e){this.level<=3&&console.warn(this.getPrefix(3),...e)}error(...e){this.level<=4&&console.error(this.getPrefix(4),...e)}}const a=class a{static getLogger(e){if(a.loggers.has(e))return a.loggers.get(e);const t=new m(e);return a.loggers.set(e,t),t}};l(a,"loggers",new Map);let u=a;exports.LogLevel=S;exports.Logger=m;exports.LoggerFactory=u;
