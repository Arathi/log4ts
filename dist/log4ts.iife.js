var log4ts=function(e){"use strict";var h=Object.defineProperty;var S=(e,r,n)=>r in e?h(e,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[r]=n;var i=(e,r,n)=>(S(e,typeof r!="symbol"?r+"":r,n),n);var r=(s=>(s.Debug="DEBUG",s.Info="INFO",s.Warning="WARN",s.Error="ERROR",s))(r||{});class n{constructor(t="ROOT"){i(this,"name");this.name=t}get time(){const t=new Date,g=`${t.getFullYear()}`.padStart(4,"0"),c=`${t.getMonth()}`.padStart(2,"0"),l=`${t.getDay()}`.padStart(2,"0"),u=`${t.getHours()}`.padStart(2,"0"),$=`${t.getMinutes()}`.padStart(2,"0"),d=`${t.getSeconds()}`.padStart(2,"0"),f=`${t.getMilliseconds()}`.padStart(3,"0");return`${g}-${c}-${l} ${u}:${$}:${d}.${f}`}getPrefix(t){return`${this.time} {${this.name}} [${t}] `}debug(...t){console.debug(this.getPrefix("DEBUG"),...t)}info(...t){console.info(this.getPrefix("INFO"),...t)}warn(...t){console.warn(this.getPrefix("WARN"),...t)}error(...t){console.error(this.getPrefix("ERROR"),...t)}}const o=class o{static getLogger(t){if(o.loggers.has(t))return o.loggers.get(t);const g=new n(t);return o.loggers.set(t,g),g}};i(o,"loggers",new Map);let a=o;return e.LogLevel=r,e.Logger=n,e.LoggerFactory=a,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),e}({});
